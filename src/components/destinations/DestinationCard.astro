---
import type { Destination } from '../../types/destination';
import StarButton from './StarButton.astro';

interface Props {
  destination: Destination;
}

const { destination } = Astro.props;
---

<div class="destination-card">
  <div class="card-content">
    <div class="header">
      <h3>
        <span class="planet-icon">{destination.planet === 'mars' ? 'üî¥' : 'üåç'}</span>
        {destination.name}
      </h3>
      <div class="actions">
        <StarButton 
          destinationId={destination.name.toLowerCase().replace(/\s+/g, '-')} 
          className="card-star"
        />
        <div class="difficulty">
          {Array(5).fill('').map((_, i) => (
            <span class={`star ${i < destination.difficulty ? 'filled' : ''}`}>‚òÖ</span>
          ))}
        </div>
      </div>
    </div>
    
    <p class="description">{destination.description}</p>
    
    <div class="meta">
      <div class="meta-item">
        <span class="label">Duration</span>
        <span class="value">{destination.duration}</span>
      </div>
      <div class="meta-item">
        <span class="label">Best Time</span>
        <span class="value">{destination.bestTime}</span>
      </div>
    </div>
    
    <div class="activities">
      {destination.activities.slice(0, 3).map(activity => (
        <span class="activity-tag">{activity}</span>
      ))}
    </div>
  </div>
</div>

<style>
  .destination-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 0.75rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    height: 100%;
  }

  .card-content {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }

  .actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  h3 {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: white;
    font-size: 1.1rem;
    margin: 0;
  }

  .description {
    color: var(--text-light);
    font-size: 0.9rem;
    line-height: 1.4;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .meta {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.75rem;
    font-size: 0.85rem;
  }

  .meta-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .label {
    color: var(--text-light);
    font-size: 0.8rem;
  }

  .value {
    color: white;
  }

  .activities {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .activity-tag {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    color: var(--text-light);
  }

  .difficulty {
    color: var(--accent);
    font-size: 0.9rem;
  }

  .star {
    color: rgba(255, 255, 255, 0.3);
  }

  .star.filled {
    color: var(--accent);
  }

  @media (max-width: 640px) {
    .card-content {
      padding: 1rem;
      gap: 0.5rem;
    }

    .meta {
      gap: 0.5rem;
    }

    .activities {
      gap: 0.25rem;
    }
  }
</style>