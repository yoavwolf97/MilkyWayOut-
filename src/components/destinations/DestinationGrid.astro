---
import type { Destination } from '../../types/destination';
import DestinationCard from './DestinationCard.astro';
import { getBestTimeSeason } from '../../utils/filterUtils';

interface Props {
  destinations: Destination[];
  activePlanet?: 'earth' | 'mars';
}

const { destinations, activePlanet } = Astro.props;

const filteredDestinations = activePlanet 
  ? destinations.filter(d => d.planet === activePlanet)
  : destinations;

const getDestinationUrl = (destination: Destination) => {
  if (destination.name === "Olympus Mons Base Camp") {
    return "/destinations/olympus-mons";
  }
  return `/destinations/${destination.name.toLowerCase().replace(/\s+/g, '-')}`;
};

// Extract duration number for data attribute
const getDurationDays = (duration: string) => {
  const match = duration.match(/(\d+)(?=\s*days)/);
  return match ? match[1] : '0';
};
---

<div class="destinations-grid">
  {filteredDestinations.map(destination => (
    <a 
      href={getDestinationUrl(destination)}
      class="grid-item"
      data-planet={destination.planet}
      data-best-time={getBestTimeSeason(destination.bestTime)}
      data-duration={getDurationDays(destination.duration)}
    >
      <DestinationCard destination={destination} />
    </a>
  ))}
</div>

<style>
  .destinations-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    padding: 1rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .grid-item {
    text-decoration: none;
    color: inherit;
    transition: transform 0.3s ease;
    height: auto;
  }

  .grid-item:hover {
    transform: translateY(-5px);
  }

  .grid-item.hidden {
    display: none;
  }

  @media (min-width: 1024px) {
    .destinations-grid {
      grid-template-columns: repeat(3, 1fr);
      padding: 2rem;
    }
  }

  @media (max-width: 1023px) {
    .destinations-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 640px) {
    .destinations-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
      padding: 1rem;
    }
  }
</style>